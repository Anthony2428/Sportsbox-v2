const{Model,DataTypes}=require('sequelize');const sequelize=require('../config/connection');const bcrypt=require('bcryptjs');class User extends Model{}
User.init({id:{type:DataTypes.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0,},username:{type:DataTypes.STRING,allowNull:!1,unique:!0,validate:{len:[8,16],}},password:{type:DataTypes.STRING,allowNull:!1,validate:{len:[6],},},},{sequelize,timestamps:!1,freezeTableName:!0,underscored:!0,modelName:'user',});User.prototype.validPassword=function(password){return bcrypt.compareSync(password,this.password)};User.addHook(`beforeSave`,user=>{const rounds=10;user.password=bcrypt.hashSync(user.password,bcrypt.genSaltSync(rounds),null)});module.exports=User